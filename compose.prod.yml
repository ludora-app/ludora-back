# Production environment overrides
# Usage: docker compose -f compose.yml -f compose.prod.yml up -d

services:
  ludora-api:
    restart: unless-stopped
    ports:
      - '2424:2424' # Only expose API port
    environment:
      - NODE_ENV=production
      - DOPPLER_TOKEN
    # Production optimizations
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    # Health check for production
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:2424/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Production security
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    command: ['npm', 'run', 'start:prod']
    labels:
      - 'prod.environment=production'

  ludora-db:
    restart: unless-stopped
    # Don't expose DB port in production for security
    environment:
      - DOPPLER_TOKEN
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 256M
    # Production DB health check
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Grafana for production monitoring
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana-prod
    restart: unless-stopped
    ports:
      - '2000:3000'
    user: '0'
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:2000
      - DOPPLER_TOKEN # Use Doppler for Grafana secrets in prod
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - ludora-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  prometheus:
    restart: unless-stopped
    ports:
      - '9090:9090'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.1'
          memory: 256M
    # Production Prometheus configuration
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-admin-api'
